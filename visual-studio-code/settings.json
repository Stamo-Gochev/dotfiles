// Overwrite settings by placing them into your settings file.
{

	//-------- Editor configuration --------
	// Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.
	"editor.glyphMargin": true,

	// Controls the font family.
	"editor.fontFamily": "Consolas, 'Courier New', monospace",

	// Controls the font size.
	"editor.fontSize": 14,

	// Controls the line height.
	"editor.lineHeight": 0,

	// Controls visibility of line numbers
	"editor.lineNumbers": true,

	// Controls visibility of the glyph margin
	"editor.glyphMargin": false,

	// Columns at which to show vertical rulers
	"editor.rulers": [],

	// Characters that will be used as word separators when doing word related navigations or operations
	"editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

	// The number of spaces a tab is equal to.
	"editor.tabSize": 4,

	// Insert spaces when pressing Tab.
	"editor.insertSpaces": true,

	// When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
	"editor.detectIndentation": true,

	// Controls if selections have rounded corners
	"editor.roundedSelection": true,

	// Controls if the editor will scroll beyond the last line
	"editor.scrollBeyondLastLine": true,

	// Controls after how many characters the editor will wrap to the next line. Setting this to 0 turns on viewport width wrapping
	//"editor.wrappingColumn": 0P,

	// Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.
	"editor.wrappingIndent": "same",

	// A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events
	"editor.mouseWheelScrollSensitivity": 1,

	// Controls if quick suggestions should show up or not while typing
	"editor.quickSuggestions": true,

	// Controls the delay in ms after which quick suggestions will show up
	"editor.quickSuggestionsDelay": 10,

	// Controls if the editor should automatically close brackets after opening them
	"editor.autoClosingBrackets": true,

	// Controls if the editor should automatically format the line after typing
	"editor.formatOnType": false,

	// Controls if suggestions should automatically show up when typing trigger characters
	"editor.suggestOnTriggerCharacters": true,

	// Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.
	"editor.acceptSuggestionOnEnter": true,

	// Controls whether the editor should highlight similar matches to the selection
	"editor.selectionHighlight": true,

	// Controls the number of decorations that can show up at the same position in the overview ruler
	"editor.overviewRulerLanes": 3,

	// Controls the cursor blinking animation, accepted values are 'blink', 'visible', and 'hidden'
	"editor.cursorBlinking": "solid",

	// Controls the cursor style, accepted values are 'block' and 'line'
	"editor.cursorStyle": "line",

	// Enables font ligatures
	"editor.fontLigatures": false,

	// Controls if the cursor should be hidden in the overview ruler.
	"editor.hideCursorInOverviewRuler": false,

	// Controls whether the editor should render whitespace characters
	"editor.renderWhitespace": "all",

	// Controls if the editor shows reference information for the modes that support it
	"editor.referenceInfos": true,

	// Controls whether the editor has code folding enabled
	"editor.folding": true,

	// Controls if the diff editor shows the diff side by side or inline
	"diffEditor.renderSideBySide": true,

	// Controls if the diff editor shows changes in leading or trailing whitespace as diffs
	"diffEditor.ignoreTrimWhitespace": true,


	//-------- Window configuration --------

	// When enabled, will open files in a new window instead of reusing an existing instance.
	"window.openFilesInNewWindow": true,

	// Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.
	"window.reopenFolders": "one",

	// Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.
	"window.zoomLevel": 0,


	//-------- Files configuration --------

	// Configure glob patterns for excluding files and folders.
	"files.exclude": {
		"**/.git": true,
		"**/.DS_Store": true
	},

	// Configure file associations to languages (e.g. "*.extension": "html"). These have precedence over the default associations of the languages installed.
	"files.associations": {},

	// The default character set encoding to use when reading and writing files.
	"files.encoding": "utf8",

	// The default end of line character.
	"files.eol": "\r\n",

	// When enabled, will trim trailing whitespace when you save a file.
	"files.trimTrailingWhitespace": true,

	// Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange". If set to "afterDelay" you can configure the delay in "files.autoSaveDelay".
	"files.autoSave": "afterDelay",

	// Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"
	"files.autoSaveDelay": 1000,

	// Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.
	"files.watcherExclude": {
		"**/.git/objects/**": true
	},


	//-------- File Explorer configuration --------

	// Maximum number of working files to show before scrollbars appear.
	"explorer.workingFiles.maxVisible": 9,

	// Controls if the height of the working files section should adapt dynamically to the number of elements or not.
	"explorer.workingFiles.dynamicHeight": true,


	//-------- HTTP configuration --------

	// The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables
	"http.proxy": "",

	// Whether the proxy server certificate should be verified against the list of supplied CAs.
	"http.proxyStrictSSL": true,


	//-------- Search configuration --------

	// Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the file.exclude setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true
	},


	//-------- Update configuration --------

	// Configure the update channel to receive updates from. Requires a restart after change.
	"update.channel": "none",


	//-------- Git configuration --------

	// Is git enabled
	"git.enabled": true,

	// Path to the git executable
	"git.path": null,

	// Whether auto fetching is enabled.
	"git.autofetch": false,


	//-------- Markdown preview configuration --------

	// A list of URLs or local paths to CSS style sheets to use from the markdown preview.
	"markdown.styles": [],


	//-------- CSS configuration --------

	// Controls CSS validation and problem severities.

	// Enables or disables all validations
	"css.validate": true,

	// When using a vendor-specific prefix make sure to also include all other vendor-specific properties
	"css.lint.compatibleVendorPrefixes": "ignore",

	// When using a vendor-specific prefix also include the standard property
	"css.lint.vendorPrefix": "warning",

	// Do not use duplicate style definitions
	"css.lint.duplicateProperties": "ignore",

	// Do not use empty rulesets
	"css.lint.emptyRules": "warning",

	// Import statements do not load in parallel
	"css.lint.importStatement": "ignore",

	// Do not use width or height when using padding or border
	"css.lint.boxModel": "ignore",

	// The universal selector (*) is known to be slow
	"css.lint.universalSelector": "ignore",

	// No unit for zero needed
	"css.lint.zeroUnits": "ignore",

	// @font-face rule must define 'src' and 'font-family' properties
	"css.lint.fontFaceProperties": "warning",

	// Hex colors must consist of three or six hex numbers
	"css.lint.hexColorLength": "error",

	// Invalid number of parameters
	"css.lint.argumentsInColorFunction": "error",

	// Unknown property.
	"css.lint.unknownProperties": "warning",

	// IE hacks are only necessary when supporting IE7 and older
	"css.lint.ieHack": "ignore",

	// Unknown vendor specific property.
	"css.lint.unknownVendorSpecificProperties": "ignore",

	// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect
	"css.lint.propertyIgnoredDueToDisplay": "warning",

	// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
	"css.lint.important": "ignore",

	// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
	"css.lint.float": "ignore",

	// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
	"css.lint.idSelector": "ignore",


	//-------- Telemetry configuration --------

	// Enable crash reports to be sent to Microsoft.
	// This option requires restart to take effect.
	"telemetry.enableCrashReporter": true,


	//-------- HTML configuration --------

	// Maximum amount of characters per line (0 = disable).
	"html.format.wrapLineLength": 120,

	// List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all inline tags.
	"html.format.unformatted": null,

	// Indent <head> and <body> sections.
	"html.format.indentInnerHtml": false,

	// Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.
	"html.format.preserveNewLines": true,

	// Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.
	"html.format.maxPreserveNewLines": null,

	// Format and indent {{#foo}} and {{/foo}}.
	"html.format.indentHandlebars": false,

	// End with a newline.
	"html.format.endWithNewline": false,

	// List of tags, comma separated, that should have an extra newline before them. 'null' defaults to "head, body, /html".
	"html.format.extraLiners": null,


	//-------- JSON configuration --------

	// Associate schemas to JSON files in the current project
	"json.schemas": [],


	//-------- Telemetry configuration --------

	// Enable usage data and errors to be sent to Microsoft.
	"telemetry.enableTelemetry": true,


	//-------- LESS configuration --------

	// Controls LESS validation and problem severities.

	// Enables or disables all validations
	"less.validate": true,

	// When using a vendor-specific prefix make sure to also include all other vendor-specific properties
	"less.lint.compatibleVendorPrefixes": "ignore",

	// When using a vendor-specific prefix also include the standard property
	"less.lint.vendorPrefix": "warning",

	// Do not use duplicate style definitions
	"less.lint.duplicateProperties": "ignore",

	// Do not use empty rulesets
	"less.lint.emptyRules": "warning",

	// Import statements do not load in parallel
	"less.lint.importStatement": "ignore",

	// Do not use width or height when using padding or border
	"less.lint.boxModel": "ignore",

	// The universal selector (*) is known to be slow
	"less.lint.universalSelector": "ignore",

	// No unit for zero needed
	"less.lint.zeroUnits": "ignore",

	// @font-face rule must define 'src' and 'font-family' properties
	"less.lint.fontFaceProperties": "warning",

	// Hex colors must consist of three or six hex numbers
	"less.lint.hexColorLength": "error",

	// Invalid number of parameters
	"less.lint.argumentsInColorFunction": "error",

	// Unknown property.
	"less.lint.unknownProperties": "warning",

	// IE hacks are only necessary when supporting IE7 and older
	"less.lint.ieHack": "ignore",

	// Unknown vendor specific property.
	"less.lint.unknownVendorSpecificProperties": "ignore",

	// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect
	"less.lint.propertyIgnoredDueToDisplay": "warning",

	// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
	"less.lint.important": "ignore",

	// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
	"less.lint.float": "ignore",

	// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
	"less.lint.idSelector": "ignore",


	//-------- Sass configuration --------

	// Controls Sass validation and problem severities.

	// Enables or disables all validations
	"sass.validate": true,

	// When using a vendor-specific prefix make sure to also include all other vendor-specific properties
	"sass.lint.compatibleVendorPrefixes": "ignore",

	// When using a vendor-specific prefix also include the standard property
	"sass.lint.vendorPrefix": "warning",

	// Do not use duplicate style definitions
	"sass.lint.duplicateProperties": "ignore",

	// Do not use empty rulesets
	"sass.lint.emptyRules": "warning",

	// Import statements do not load in parallel
	"sass.lint.importStatement": "ignore",

	// Do not use width or height when using padding or border
	"sass.lint.boxModel": "ignore",

	// The universal selector (*) is known to be slow
	"sass.lint.universalSelector": "ignore",

	// No unit for zero needed
	"sass.lint.zeroUnits": "ignore",

	// @font-face rule must define 'src' and 'font-family' properties
	"sass.lint.fontFaceProperties": "warning",

	// Hex colors must consist of three or six hex numbers
	"sass.lint.hexColorLength": "error",

	// Invalid number of parameters
	"sass.lint.argumentsInColorFunction": "error",

	// Unknown property.
	"sass.lint.unknownProperties": "warning",

	// IE hacks are only necessary when supporting IE7 and older
	"sass.lint.ieHack": "ignore",

	// Unknown vendor specific property.
	"sass.lint.unknownVendorSpecificProperties": "ignore",

	// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect
	"sass.lint.propertyIgnoredDueToDisplay": "warning",

	// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
	"sass.lint.important": "ignore",

	// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
	"sass.lint.float": "ignore",

	// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
	"sass.lint.idSelector": "ignore",


	//-------- TypeScript configuration --------

	// Specifies the folder path containing the tsserver and lib*.d.ts files to use.
	"typescript.tsdk": null,

	// Complete functions with their parameter signature.
	"typescript.useCodeSnippetsOnMethodSuggest": false,

	// Enable / disable TypeScript validation
	"typescript.validate.enable": true,

	// Defines space handling after a comma delimiter
	"typescript.format.insertSpaceAfterCommaDelimiter": true,

	//  Defines space handling after a semicolon in a for statement
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Defines space handling after a binary operator
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Defines space handling after keywords in control flow statement
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Defines space handling after function keyword for anonymous functions
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Defines space handling after opening and before closing non empty parenthesis
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Defines space handling after opening and before closing non empty brackets
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Defines whether an open brace is put onto a new line for functions or not
	"typescript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Defines whether an open brace is put onto a new line for control blocks or not
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Enable / disable JavaScript validation
	"javascript.validate.enable": true,

	// Defines space handling after a comma delimiter
	"javascript.format.insertSpaceAfterCommaDelimiter": true,

	//  Defines space handling after a semicolon in a for statement
	"javascript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Defines space handling after a binary operator
	"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Defines space handling after keywords in control flow statement
	"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Defines space handling after function keyword for anonymous functions
	"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Defines space handling after opening and before closing non empty parenthesis
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Defines space handling after opening and before closing non empty brackets
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Defines whether an open brace is put onto a new line for functions or not
	"javascript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Defines whether an open brace is put onto a new line for control blocks or not
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,


	//-------- PHP Configuration options --------

	// Whether php validation is enabled or not.
	"php.validate.enable": true,

	// Points to the php executable.
	"php.validate.executablePath": null,

	// Whether the linter is run on save or on type.
	"php.validate.run": "onSave",

	// Custom settings

	"editor.wordWrap": true,

	"editor.autoIndent": true,

	"editor.cursorBlinking": "solid",

	// Zoom the font of the editor when using mouse wheel and holding Ctrl
    "editor.mouseWheelZoom": true,

	// Remove trailing auto inserted whitespace
    "editor.trimAutoWhitespace": true,

	"trailing-spaces.trimOnSave": true,

	"workbench.editor.enablePreview": false,

	//Vim
	"vim.normalModeKeyBindings": [{
		"before": ["<leader>", "o", "o"],
		"after": ["O", "<esc>", "<down>"]
	}, {
		"before": ["<leader>", "l", "l"],
		"after": ["j", "<esc>", "<up>"]
	}],

	"vim.normalModeKeyBindingsNonRecursive": [{
		"before": ["o"],
		"after": ["<up>"]
	}, {
		"before": ["l"],
		"after": ["<down>"]
	}, {
		"before": ["k"],
		"after": ["<left>"]
	}, {
		"before": [";"],
		"after": ["<right>"]
	}, {
		"before": ["j"],
		"after": ["o"]
	}, {
		"before": ["<tab>"],
		"after": [">", ">"]
	}, {
		"before": ["<shift>", "<tab>"],
		"after": ["<", "<"]
	}, {
		"before": ["G"],
		"after": ["G", "z", "z"]
	}, {
		"before": ["n"],
		"after": ["n", "z", "z"]
	}, {
		"before": ["N"],
		"after": ["N", "z", "z"]
	}, {
		"before": ["}"],
		"after": ["}", "z", "z"]
	}, {
		"before": ["{"],
		"after": ["{", "z", "z"]
	}, {
		"before": ["*"],
		"after": ["*", "z", "z"]
	}, {
		"before": [")"],
		"after": ["$"]
	}, {
		"before": ["0"],
		"after": ["^"]
	}, {
		"before": ["^"],
		"after": ["0"]
	}, {
		"before": ["<backspace>"],
		"after": ["X"]
	}, {
		"before":["<Esc>"],
		"commands": [":nohl"]
	}, {
		"before":["<leader>", "h"],
		"commands": [":nohl"]
	}, {
		"before":["<leader>", "0", "p"],
		"after":["\"", "0", "p"]
	}, {
		"before":["<leader>", "1", "p"],
		"after":["\"", "1", "p"]
	}, {
		"before":["<leader>", "2", "p"],
		"after":["\"", "2", "p"]
	}, {
		"before":["<leader>", "3", "p"],
		"after":["\"", "3", "p"]
	}, {
		"before":["<leader>", "4", "p"],
		"after":["\"", "4", "p"]
	}, {
		"before":["<leader>", "5", "p"],
		"after":["\"", "5", "p"]
	}, {
		"before":["<leader>", "2", "p"],
		"after":["\"", "2", "p"]
	}
	],

	"vim.insertModeKeyBindingsNonRecursive": [{
		"before": ["k", "k"],
		"after": ["<esc>"]
	}],

	"vim.visualModeKeyBindingsNonRecursive": [{
		"before": ["o"],
		"after": ["<up>"]
	}, {
		"before": ["l"],
		"after": ["<down>"]
	}, {
		"before": ["k"],
		"after": ["<left>"]
	}, {
		"before": [";"],
		"after": ["<right>"]
	}, {
		"before": ["m", "m"],
		"after": ["<esc>"]
	}],

	"vim.handleKeys": {
		"<C-a>": false,
		"<C-f>": false,
		"<C-c>": false,
		"<C-v>": false
	},

	"vim.replaceWithRegister": true,

	"vim.easymotion": true,

    // Set a custom background color for EasyMotion markers.
    "vim.easymotionMarkerBackgroundColor": "#0000ff",

	// Set a custom color for the text on one character long markers.
	"vim.easymotionMarkerForegroundColorOneChar": "#fff",

	// Set a custom color for the text on two character long markers.
	"vim.easymotionMarkerForegroundColorTwoChar": "",

	// Set the width (in pixels) allocated to each character in the match.
	"vim.easymotionMarkerWidthPerChar": 12,

	// Set the height of the marker.
	"vim.easymotionMarkerHeight": 16,

	// Set the font family of the marker text.
	"vim.easymotionMarkerFontFamily": "Consolas",

	// Set the font size of the marker text.
	"vim.easymotionMarkerFontSize": "16",

	// Set the font weight of the marker text.
	"vim.easymotionMarkerFontWeight": "normal",

	// Set the Y offset of the marker text (the distance from the top).
	"vim.easymotionMarkerYOffset": 0,

	// Set the characters used for jump marker name
	"vim.easymotionKeys": "asdko;lqwefrzxcvbtg,:iuyjhm",

	"vim.sneak": false,
	"vim.sneakUseIgnorecaseAndSmartcase": true,

	"vim.camelCaseMotion.enable": true,

	"vim.leader": " ",
	"vim.hlsearch": true,
	"vim.highlightedyank.enable": true,
	"vim.highlightedyank.color": "#d2cf1e",
	"vim.highlightedyank.duration": 250,
	"vim.searchHighlightColor": "#58c4db",

	"workbench.colorTheme": "Monokai-Best",
	"spell.StopAsking": true,
	"workbench.iconTheme": "vscode-icons",
	"vsicons.presets.foldersAllDefaultIcon": true,
	"sync.gist": "c3fadfb006fc3f96dd1c9c50694828de",
	"sync.lastUpload": "2018-06-07T07:56:55.333Z",
	"sync.autoDownload": false,
	"sync.autoUpload": false,
	"sync.lastDownload": "2018-06-14T17:24:20.753Z",
	"sync.forceDownload": false,
	"sync.anonymousGist": false,
	"sync.host": "",
	"sync.pathPrefix": "",
	"sync.quietSync": false,
	"sync.askGistName": false,
	"gitlens.gitExplorer.files.layout": "tree",
	"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
	"bracketPairColorizer.forceUniqueOpeningColor": true,
	"bracketPairColorizer.consecutivePairColors": [
		"()",
		"[]",
		"{}",
		[
			"White",
			"White",
			"White"
		],
		"White"
	],
	"bracketPairColorizer.independentPairColors": [
		[
			"()",
			[
				"Cyan",
				"White",
				"Yellow"
			],
			"White"
		],
		[
			"[]",
			[
				"Cyan",
				"White",
				"Yellow"
			],
			"White"
		],
		[
			"{}",
			[
				"Cyan",
				"White",
				"Yellow"
			],
			"White"
		]
	],
	"indenticator.inner.showHighlight": true,
	"indenticator.color.dark": "#00ff00",
	"indenticator.inner.color.dark": "cyan",
	"gitlens.keymap": "alternate",
	"gitlens.historyExplorer.enabled": true,
	"gitlens.advanced.messages": {
		"suppressShowKeyBindingsNotice": true
	},
	"vsicons.projectDetection.autoReload": true,
	"sync.removeExtensions": true,
	"sync.syncExtensions": true,
	"lineEndings.crlfCharacter": "CRLF ¤¬",
	"lineEndings.lfCharacter": "LF ¬",
	"scrolloff.scrolloff": 10,
	"gitlens.views.search.files.layout": "tree",
	"gitlens.settings.mode": "advanced",
	"javascript.updateImportsOnFileMove.enabled": "always",
	"peacock.affectActivityBar": true,
	"peacock.affectTitleBar": false,
	"peacock.favoriteColors": [
		{
			"name": "Angular Red",
			"value": "#eb2626"
		},
		{
			"name": "C# Purple",
			"value": "#68217A"
		},
		{
			"name": "Gatsby Purple",
			"value": "#639"
		},
		{
			"name": "Go Cyan",
			"value": "#5dc9e2"
		},
		{
			"name": "Java Blue-Gray",
			"value": "#557c9b"
		},
		{
			"name": "Node Green",
			"value": "#215732"
		},
		{
			"name": "React Blue",
			"value": "#1857a4"
		},
		{
			"name": "Something Different",
			"value": "#832561"
		},
		{
			"name": "Vue Green",
			"value": "#42b883"
		},
		{
			"name": "kendo-orange",
			"value": "#e56137"
		},
		{
			"name": "original dark pink",
			"value": "#832561"
		},
		{
			"name": "original dark purple",
			"value": "#391286"
		},
		{
			"name": "original purple blue",
			"value": "#1e26f4"
		},
		{
			"name": "light-pink",
			"value": "#9c72c8"
		},
		{
			"name": "original-cyan",
			"value": "#58c4db"
		},
		{
			"name": "nice-blue",
			"value": "#1857a4"
		},
		{
			"name": "dark-pink-2",
			"value": "#e72e8a"
		},
		{
			"name": "dark-pink-3",
			"value": "#ac4dda"
		},
		{
			"name": "angular-dark-red",
			"value": "#860d0d"
		},
		{
			"name": "kendo-dark-orange-2",
			"value": "#e24f21"
		},
		{
			"name": "light-green",
			"value": "#23b89c"
		},
		{
			"name": "light-beige",
			"value": "#fd8fc7"
		},
		{
			"name": "gray-green",
			"value": "#446d76"
		},
		{
			"name": "brown",
			"value": "#704314"
		},
		{
			"name": "cyan-dark",
			"value": "#2492a7"
		},
		{
			"name": "cyan-light",
			"value": "#43bdd6"
		},
		{
			"name": "orange-dark",
			"value": "#892e12"
		},
		{
			"name": "ng2-red",
			"value": "#860d0d"
		},
		{
			"name": "yellow",
			"value": "#958605"
		},
		{
			"name": "csharp-light-purple",
			"value": "#523472"
		},
		{
			"name": "orange-light",
			"value": "#f26035"
		},
		{
			"name": "light-green",
			"value": "#88cd5e"
		},
		{
			"name": "green-grass",
			"value": "#99b41a"
		},
		{
			"name": "sky-blue",
			"value": "#2a9ccc"
		}
	],

	// fix coloring of .gitignore files by the vscode theme, e.g. node_modules
	"explorer.decorations.colors": false,

	"workbench.colorCustomizations": {
		"breadcrumb.foreground": "#ffffff",
		"breadcrumb": "#832561",
		"breadcrumb.activeSelectionForeground": "#ffffff",

		"editor.selectionHighlightBackground": "#1E79D2",
		"editor.inactiveSelectionBackground": "#d2cf1e",
		"editor.wordHighlightBackground": "#1E79D2",
		"editor.wordHighlightStrongBackground": "#1E79D2",
		"editor.wordHighlightStrongBackground": "#7e94aa",
		"editor.findMatchBackground": "#e8734e",
		"editor.findMatchHighlightBackground": "#1E79D2",
		"editorLineNumber.foreground": "#ffffff",

		"list.activeSelectionBackground": "#1E79D2",
		"list.activeSelectionForeground": "#ffffff",
		"list.inactiveSelectionBackground": "#557c9b",
		"list.inactiveFocusBackground": "#832561",
		"list.focusBackground": "#832561",
		"list.hoverBackground": "#1E79D2",
		"list.focusForeground": "#ffffff",

		"tab.activeBackground": "#1E79D2",
		"tab.activeForeground": "#ffffff",
		"tab.activeBorder": "#ffffff",
		"tab.unfocusedActiveForeground": "#ffffff",
		"tab.inactiveForeground": "#ffffff",
		"tab.unfocusedInactiveForeground": "#ffffff",

		"sideBar.background": "#000000",
		"sideBar.border": "#ffffff",
		"sideBar.foreground": "#ffffff",
		"sideBar.foreground": "#ffffff",

		"badge.background": "#000000",

		"scrollbar.shadow": "#42b883",
		"scrollbarSlider.background": "#42b883",
		"scrollbarSlider.hoverBackground": "#42b883",
		"scrollbarSlider.activeBackground": "#42b883",

		"editorBracketMatch.background": "#e8734e",

		"gitDecoration.modifiedResourceForeground": "#ffffff",
		"gitDecoration.untrackedResourceForeground": "#d2cf1e",

		"debugToolBar.border": "#d2cf1e",

		"input.background": "#000000",
		"input.foreground": "#ffffff",
		"input.border": "#e8734e",

	},
	"peacock.surpriseMeOnStartup": true,
	"peacock.keepBadgeColor": true,
	"breadcrumbs.enabled": true,
	"liveshare.featureSet": "insiders",
	"peacock.affectStatusBar": false,

	"debug.javascript.usePreview": true,
	"vs-kubernetes": {
		"vs-kubernetes.helm-path.windows": "C:\\Users\\gochev\\.vs-kubernetes\\tools\\helm\\windows-amd64\\helm.exe",
		"vs-kubernetes.minikube-path.windows": "C:\\Users\\gochev\\.vs-kubernetes\\tools\\minikube\\windows-amd64\\minikube.exe",
		"vs-kubernetes.draft-path.windows": "C:\\Users\\gochev\\.vs-kubernetes\\tools\\draft\\windows-amd64\\draft.exe"
	}
}
